#!/bin/bash

# For small effort submissions of jobs to leruli queue.

function flag_val(){
    echo $1 | cut -d'=' -f2-
}

NCPUs=1
JOB_OMP_NUM_THREADS=1
req_files=""
exec_command=bash

docker=""

UPDATE_BMAPQML=FALSE

while [[ "$1" == --* ]]
do
    case "$1" in
        --CPUs=*)
            NCPUs=$(flag_val $1);;
        --docker=*)
            docker=$(flag_val $1);;
        --memory=*)
            memory=$(flag_val $1);;
        --OMP_NUM_THREADS=*)
            JOB_OMP_NUM_THREADS=$(flag_val $1);;
        --req_files=*)
            req_files=$(flag_val $1 | tr ':' ' ');;
        --update_bmapqml)
            UPDATE_BMAPQML=TRUE;;
        --export_env_vars=*)
            EXPORT_ENV_VARS=$(flag_val $1);;
        --copy_modules=*)
            copy_modules=$(flag_val $1);;
        --exec=*)
            exec_command=$(flag_val $1);;
        --*)
            echo "Unknown flag: $1"
            exit;;
    esac
    shift
done

if [ -z "$docker" ]
then
    # Set the latest bmapqml docker available as the one used.
    docker=$(leruli task-list-codes | awk 'BEGIN {FS=":"}
    {if ($1 == "bmapqml") latest_bmapqml_docker=$0}
    END {print latest_bmapqml_docker}')
    if [ -z $docker ]
    then
        echo "No Docker image specified and no bmapqml Docker image found. Terminating."
        exit
    fi
fi

exec_script=$1

if [ "$exec_script" == "" ]
then
	echo "$exec_command script name should be the first argument."
	exit
fi


job_name=$2

other_args=${@:3}

if [ "$job_name" == "" ]
then
	echo "Name of the job should be the second argument."
	exit
fi

data_dir=$(pwd)/data_$job_name

if [ -d $data_dir ]
then
	echo "Job has already been done."
	exit
fi
mkdir $data_dir

cp $exec_script $data_dir

for req_file in $req_files
do
    if [ -f $req_file ]
    then
        cp $req_file $data_dir
    else
        echo "WARNING: file does not exist: "$req_file
    fi
done

cd $data_dir

if [ "$UPDATE_BMAPQML" == "TRUE" ]
then
    copy_modules=$copy_modules:bmapqml
fi

if [ ! -z "$copy_modules" ]
then
    extra_mod_name=EXTRA_MODULES
    mkdir -p $extra_mod_name
    for mod in $(echo $copy_modules | tr ":" " ")
    do
        d=$(python -c "import $mod, os ; print(os.path.dirname($mod.__file__))")
        cp -r $d $data_dir/$extra_mod_name
    done
fi

EXNAME=ex_$job_name.sh

cat > $EXNAME << EOF
#!/bin/bash
export BMAPQML_NUM_PROCS=$NCPUs
EOF

for NTHREAD_VAR in "OMP_NUM_THREADS" "OPENBLAS_NUM_THREADS" "MKL_NUM_THREADS" "VECLIB_MAXIMUM_THREADS" "NUMEXPR_NUM_THREADS" "NUMBA_NUM_THREADS"
do
    echo "export $NTHREAD_VAR=$JOB_OMP_NUM_THREADS" >> $EXNAME
done

if [ ! -z "$copy_modules" ]
then
    echo "export PYTHONPATH=\$(pwd)/$extra_mod_name:\$PYTHONPATH" >> $EXNAME
fi

if [ ! -z "$EXPORT_ENV_VARS" ]
then
    for env_tuple in $(echo $EXPORT_ENV_VARS | tr "/" " ")
    do
        echo "export $env_tuple" >> $EXNAME
    done
fi

cat >> $EXNAME << EOF
echo "Started on \$(hostname): \$(date)" > execution_time.txt
$exec_command $(basename $exec_script) $other_args
echo "Finished: \$(date)" >> execution_time.txt
EOF

chmod +x $EXNAME

if [ "$memory" != "" ]
then
    mem_flags="--memory $memory"
fi

leruli task-submit --cores $NCPUs $mem_flags $(echo $docker | tr ':' ' ') ./$EXNAME

cd ..
